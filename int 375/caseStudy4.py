'''Case Study: Superstore Sales Analysis
Use: Sample Super Store Dataset 
A national retail chain collects data on its sales, customers, and product categories. The company 
wants to analyze this data to improve sales strategies, identify top-selling products, and maximize 
profitability. The dataset superstore_sales.csv contains information on Orders, Sales, Profit, Discounts, 
Customers, and Locations. The company aims to answer critical business questions using Pandas.
Dataset Overview
The dataset includes the following columns:
• Order Date: The date when the order was placed.
• Sales: Revenue generated from the sale.
• Profit: Profit earned from the transaction.
• Discount: Discount applied to the sale.
• Category: The product category (Furniture, Technology, Office Supplies).
• Customer Name: Name of the customer.
• City, State: Location of the order.
Business Questions
Data Exploration & Summary
1. How can the company load and preview the first 10 rows of the dataset?
2. What are the last 5 transactions recorded in the dataset?
3. How can we get a summary of the DataFrame, including data types and missing values?
4. What are the descriptive statistics of the dataset, such as average sales and profit?
5. What is the total number of records (rows and columns) in the dataset?
Sales & Profit Analysis
6. What is the total sales revenue generated by the company?
7. How can we compute the average sales per transaction?
8. What was the highest and lowest sales value recorded?
9. How much total profit has the company earned?
10. Which product category generated the most profit?
Discounts & Pricing
11. What is the average discount applied across all transactions?
12. Which product category offers the highest discounts?'''

import pandas as pd
df=pd.read_csv('samplesuperstore.csv')
print(df)

# print(df.head())
# print(df.tail())

# print(df.info())

# print(df.isnull().sum())

# print(df.describe())

# print(df.shape)

# print(df['Sales'].sum())

# print(df['Sales'].mean())
# print(df['Sales'].max())
# print(df['Sales'].min())

# print(df['Profit'].total())

# profit_by_category=df.groupby('Category')['Profit'].sum()
# most_profit=profit_by_category.idxmax()

# n=most_profit.max()
# print(n)

